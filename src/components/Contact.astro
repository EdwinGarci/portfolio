---
import { getLocale } from '../utils/i18nHelpers';

const { locale, translations } = await getLocale(Astro);
---

<section id="contact">
    <div class="max-w-screen-xl px-4 py-8 mx-auto lg:px-6 lg:py-24 sm:py-16">
        <h2 class="text-4xl font-extrabold leading-tight pb-3 tracking-tight text-gray-900 md:text-5xl sm:text-4xl xl:text-6xl dark:text-white">
            {translations.contact.title}
        </h2>
        <p class="mb-8 lg:mb-16 font-normal text-gray-500 dark:text-gray-400 sm:text-xl">
            {translations.contact.description}
        </p>
        <form id="contact-form" class="space-y-8">
            <div>
                <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">{translations.contact.form.email}</label>
                <input type="email" id="email" class="shadow-sm bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-primary-500 focus:border-primary-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500 dark:shadow-sm-light" placeholder={translations.contact.form.emailPlaceholder} required>
            </div>
            <div>
                <label for="subject" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">{translations.contact.form.subject}</label>
                <input type="text" id="subject" class="block p-3 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 shadow-sm focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500 dark:shadow-sm-light" placeholder={translations.contact.form.subjectPlaceholder} required>
            </div>
            <div class="sm:col-span-2">
                <label for="message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-gray-300">{translations.contact.form.message}</label>
                <textarea id="message" rows="6" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg shadow-sm border border-gray-300 focus:ring-primary-500 focus:border-primary-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-primary-500 dark:focus:border-primary-500" placeholder={translations.contact.form.messagePlaceholder}></textarea>
            </div>
            <button type="submit" class="py-3 px-5 text-sm font-medium text-center text-white rounded-lg bg-primary sm:w-fit hover:bg-primary-dark focus:ring-4 focus:outline-none focus:ring-primary dark:bg-primary dark:hover:bg-primary-dark dark:focus:ring-primary-dark transition-all duration-200 ease-in-out">{translations.contact.form.send}</button>
        </form>
    </div>
</section>

<script>
    const handleFormSubmit = async (event: SubmitEvent) => {
        event.preventDefault();
        const form = event.target as HTMLFormElement;
        const email = (form.elements.namedItem('email') as HTMLInputElement).value;
        const subject = (form.elements.namedItem('subject') as HTMLInputElement).value;
        const message = (form.elements.namedItem('message') as HTMLTextAreaElement).value;
    
        try {
            const response = await fetch('/api/send-email', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ email, subject, message }),
            });
    
            const result = await response.json();
            if (result.success) {
                alert('Correo enviado exitosamente.');
                form.reset();
            } else {
                alert('Hubo un problema al enviar el correo. Por favor, intenta nuevamente.');
            }
        } catch (error) {
            alert('Hubo un problema al enviar el correo. Por favor, intenta nuevamente.');
        }
    };
    
    document.addEventListener('DOMContentLoaded', () => {
        const form = document.getElementById('contact-form');
        if (form) {
            form.addEventListener('submit', handleFormSubmit);
        }
    });
</script>