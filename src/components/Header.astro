---
import FGLogo from '../assets/FG_logo.png';
import { getLocale } from '../utils/i18nHelpers';

const { locale, translations } = await getLocale(Astro);
---

<header id="header" class="fixed top-0 left-0 z-50 w-full shadow-md dark:shadow-none">
    <nav class="border-gray-200 text-white dark:text-white" role="navigation" aria-label="Main Navigation">
        <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto p-4">
            <a rel="noopener noreferrer" href="https://fidel-gt-dev.netlify.app/" class="flex items-center space-x-3 rtl:space-x-reverse">
                <img src={FGLogo.src} class="h-8 sm:h-6" alt="Logo de Fidel García Távara" />
                <span class="self-center text-2xl font-semibold whitespace-nowrap dark:text-white">EFGT</span>
            </a>
            <button 
                data-collapse-toggle="navbar-default" 
                type="button"
                class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" 
                aria-controls="navbar-default" 
                aria-expanded="false">
                <span class="sr-only">{translations.header.openMenu}</span>
                <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
                </svg>
            </button>
            <div class="hidden w-full md:block md:w-auto" id="navbar-default">
                <ul class="font-medium flex flex-col p-4 md:p-0 mt-4 border border-gray-100 rounded-lg md:flex-row md:space-x-8 rtl:space-x-reverse md:mt-0 md:border-0 dark:border-gray-700">
                    <li>
                        <a href="#home" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.home}
                        </a>
                    </li>
                    <li>
                        <a href="#about" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.about}
                        </a>
                    </li>
                    <li>
                        <a href="#experience" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.experience}
                        </a>
                    </li>
                    <li>
                        <a href="#skills" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.skills}
                        </a>
                    </li>
                    <li>
                        <a href="#projects" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.projects}
                        </a>
                    </li>
                    <li>
                        <a href="#contact" class="transition-all nav-link block py-2 px-3 text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:border-0 md:hover:text-blue-700 md:p-0 dark:text-white md:dark:hover:text-blue-500 dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent">
                            {translations.header.contact}
                        </a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const navLinks = document.querySelectorAll('.nav-link');
        const toggleButton = document.querySelector('[data-collapse-toggle]');
        const menu = document.getElementById('navbar-default');
        const header = document.getElementById('header');
        let lastScrollY = window.scrollY;

        const updateActiveLink = () => {
            const currentHash = window.location.hash; // || (navLinks[0]?.getAttribute('href') || '#home');
            navLinks.forEach(link => {
                const href = link.getAttribute('href') || '';
                const isActive = href === currentHash;
                link.setAttribute('aria-current', isActive ? 'page' : '');
                link.classList.toggle('text-white', isActive);
                link.classList.toggle('bg-blue-700', isActive);
                link.classList.toggle('md:text-blue-700', isActive);
                link.classList.toggle('md:bg-transparent', isActive);
                link.classList.toggle('dark:text-blue-500', isActive);
            });
        };

        const toggleMenu = () => {
            const isExpanded = toggleButton?.getAttribute('aria-expanded') === 'true';
            toggleButton?.setAttribute('aria-expanded', (!isExpanded).toString());
            menu?.classList.toggle('hidden', isExpanded);
        };

        // Update active link on load and hash change
        if (navLinks.length > 0) {
            updateActiveLink();
            window.addEventListener('hashchange', updateActiveLink);
        }

        // Toggle menu on button click
        toggleButton?.addEventListener('click', toggleMenu);

        const handleScroll = () => {
            if (window.scrollY < lastScrollY) {
                header?.classList.remove('-translate-y-full');
            } else {
                header?.classList.add('-translate-y-full');
            }
            lastScrollY = window.scrollY;
        };

        const handleMouseMove = (event: MouseEvent) => {
            if (event.clientY < 50) {
                header?.classList.remove('-translate-y-full');
            }
        };

        window.addEventListener('scroll', handleScroll);
        window.addEventListener('mousemove', handleMouseMove);
    });
</script>

<style>
    .transition-all {
        transition: all 0.3s ease-in-out;
    }

    .transition-transform {
        transition: transform 0.3s ease-in-out;
    }
</style>

